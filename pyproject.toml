[project]
name = "immune"
version = "0.1.0"
description = "ML-based malware detection system for PE Windows"
authors = [
    {name = "Leo Karoubi", email = "anonym@osmosys.link"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "torchaudio>=2.1.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "scikit-learn>=1.3.0",
    "pandas>=2.0.0",
    "opencv-python>=4.8.0",
    "Pillow>=10.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "h5py>=3.9.0",
    "joblib>=1.3.0",
    "tqdm>=4.65.0",
    "tensorboard>=2.13.0",
    "wandb>=0.15.0",
    "mlflow>=2.5.0",
    "pefile>=2023.2.7",
    "yara-python>=4.3.0",
    "capstone>=4.0.2",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "colorama>=0.4.6",
    "pyzipper>=0.3.6",
    "xgboost>=1.7.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
target-version = "py12"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 88
target-version = ['py12']
include_trailing_comma = true
skip_magic_trailing_comma = false

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

